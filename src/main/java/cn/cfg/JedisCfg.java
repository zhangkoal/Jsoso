package cn.cfg;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.PropertySource;import org.springframework.stereotype.Component;/** * reids参数注入 */@Component@PropertySource("classpath:properties/redis.properties")public class JedisCfg {    private static final long serialVersionUID = 1L;    public static final JedisCfg getInstance() {        return new JedisCfg();    }    // Redis服务器IP    @Value("${web.redis.IP}")    public String IP;    // Redis的端口号    @Value("${web.redis.PORT}")    public int PORT;    // 访问密码    @Value("${web.redis.AUTH}")    public String AUTH;    @Value("${web.redis.MAX_TOTAL}")    // 可用连接实例的最大数目，默认为8；    // 如果赋值为-1，则表示不限制，如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)    public int MAX_TOTAL;    // 等待可用连接的最大时间，单位是毫秒，默认值为-1，表示永不超时。    // 如果超过等待时间，则直接抛出JedisConnectionException    @Value("${web.redis.MAX_WAIT_MILLIS}")    public long MAX_WAIT_MILLIS;    // 控制一个pool最多有多少个状态为idle(空闲)的jedis实例，默认值是8    @Value("${web.redis.MAX_IDLE}")    public int MAX_IDLE;    // 在borrow(用)一个jedis实例时，是否提前进行validate(验证)操作；    // 如果为true，则得到的jedis实例均是可用的    @Value("${web.redis.TEST_ON_BORROW}")    public boolean TEST_ON_BORROW;    @Value("${web.redis.TIME_OUT}")    public int TIME_OUT;}